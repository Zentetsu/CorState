cmake_minimum_required(VERSION 3.11)

# Define folders
set(SRC_DIR ${CMAKE_SOURCE_DIR}/project/tests/src)
set(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/project/tests/include)
set(BUILD_TEST_DIR ${CMAKE_BINARY_DIR}/tests)
set(TEST_JSON ${CMAKE_SOURCE_DIR}/project/tests)

# Define the executable
add_executable(test_list
    ${INCLUDE_DIR}/test_List.h
    ${SRC_DIR}/test_List.c
    ${SRC_DIR}/main_List.c
)

add_executable(test_dict
    ${INCLUDE_DIR}/test_Dict.h
    ${SRC_DIR}/test_Dict.c
    ${SRC_DIR}/main_Dict.c
)

add_executable(test_CorState
    ${INCLUDE_DIR}/test_CorState.h
    ${INCLUDE_DIR}/test_1.h
    ${INCLUDE_DIR}/test_2.h
    ${SRC_DIR}/test_CorState.c
    ${SRC_DIR}/test_1.c
    ${SRC_DIR}/test_2.c
    ${SRC_DIR}/main_CorState.c
)

# Link the unity library to the executable
enable_testing()
add_dependencies(test_list install_jsonc install_unity install_corstate)
add_dependencies(test_dict install_jsonc install_unity install_corstate)
add_dependencies(test_CorState install_jsonc install_unity install_corstate)

target_link_libraries(test_list unity CorState)
target_link_libraries(test_dict unity CorState)
target_link_libraries(test_CorState unity CorState)
add_test(NAME run_list COMMAND test_list)
add_test(NAME run_dict COMMAND test_dict)
add_test(NAME run_CorState COMMAND test_CorState)

set_target_properties(test_list PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${BUILD_TEST_DIR}
)

set_target_properties(test_dict PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${BUILD_TEST_DIR}
)

set_target_properties(test_CorState PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${BUILD_TEST_DIR}
)

# add_custom_command(TARGET test_CorState POST_BUILD
# COMMAND ${CMAKE_COMMAND} -E env TEST_JSON=${TEST_JSON} $<TARGET_FILE:test_CorState>
# )